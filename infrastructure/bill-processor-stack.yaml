AWSTemplateFormatVersion: '2010-09-09'
Description: 'Infrastructure for utility bill processing system'

Parameters:
  S3BucketName:
    Type: String
    Description: Name of the S3 bucket for storing bills
    Default: your-utility-bills-bucket

Resources:
  # DynamoDB Table for storing processed bill data
  BillsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: UtilityBills
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: billId
          AttributeType: S
        - AttributeName: billDate
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: billId
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: UserBillsByDate
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: billDate
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      Tags:
        - Key: Project
          Value: UtilityBillProcessor

  # IAM Role for Lambda function
  BillProcessorLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: BillProcessorLambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: !Sub 'arn:aws:s3:::${S3BucketName}/*'
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource: 
                  - !GetAtt BillsTable.Arn
                  - !Sub '${BillsTable.Arn}/index/*'
        - PolicyName: BedrockAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - bedrock:InvokeModel
                Resource: !Sub 'arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-3-sonnet-20240229-v1:0'

  # Lambda function
  BillProcessorFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: bill-processor
      Runtime: nodejs18.x
      Handler: index.handler
      Role: !GetAtt BillProcessorLambdaRole.Arn
      Code:
        ZipFile: |
          // Placeholder - deploy actual code using deployment script
          exports.handler = async (event) => {
            console.log('Placeholder function - deploy actual code');
            return { statusCode: 200 };
          };
      Environment:
        Variables:
          BILLS_TABLE_NAME: !Ref BillsTable
          BEDROCK_REGION: !Ref AWS::Region
      Timeout: 300
      MemorySize: 512
      Tags:
        - Key: Project
          Value: UtilityBillProcessor

  # S3 Bucket notification permission for Lambda
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref BillProcessorFunction
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Sub 'arn:aws:s3:::${S3BucketName}'

Outputs:
  BillsTableName:
    Description: Name of the DynamoDB table
    Value: !Ref BillsTable
    Export:
      Name: !Sub '${AWS::StackName}-BillsTable'

  LambdaFunctionArn:
    Description: ARN of the Lambda function
    Value: !GetAtt BillProcessorFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-LambdaArn'

  LambdaFunctionName:
    Description: Name of the Lambda function
    Value: !Ref BillProcessorFunction
    Export:
      Name: !Sub '${AWS::StackName}-LambdaName'