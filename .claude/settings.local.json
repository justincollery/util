{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(npm init:*)",
      "Bash(npm install:*)",
      "Bash(chmod:*)",
      "Bash(aws configure get:*)",
      "Bash(aws cloudformation:*)",
      "Bash(zip:*)",
      "Bash(ls:*)",
      "Bash(tar:*)",
      "Bash(aws lambda update-function-code:*)",
      "Bash(python3:*)",
      "Bash(aws s3api put-bucket-notification-configuration:*)",
      "Bash(aws s3api get-bucket-notification-configuration:*)",
      "Bash(rm:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(aws amplify create-app:*)",
      "Bash(aws amplify create-branch:*)",
      "Bash(aws amplify update-app:*)",
      "Bash(aws amplify start-deployment:*)",
      "Bash(aws s3 cp:*)",
      "Bash(aws amplify get-job:*)",
      "WebFetch(domain:aws-amplify-prod-eu-west-1-artifacts.s3.eu-west-1.amazonaws.com)",
      "Bash(aws elasticbeanstalk create-application:*)",
      "Bash(aws iam put-user-policy:*)",
      "Bash(aws elasticbeanstalk create-environment:*)",
      "Bash(aws elasticbeanstalk list-available-solution-stacks:*)",
      "Bash(aws elasticbeanstalk describe-environments:*)",
      "Bash(aws elasticbeanstalk describe-events:*)",
      "Bash(aws iam create-role:*)",
      "Bash(aws iam attach-role-policy:*)",
      "Bash(aws iam create-instance-profile:*)",
      "Bash(aws iam add-role-to-instance-profile:*)",
      "Bash(aws elasticbeanstalk update-environment:*)",
      "Bash(aws elasticbeanstalk describe-instance-health:*)",
      "Bash(aws elasticbeanstalk describe-instances-health:*)",
      "Bash(aws elasticbeanstalk terminate-environment:*)",
      "Bash(unzip:*)",
      "Bash(aws elasticbeanstalk request-environment-info:*)",
      "WebFetch(domain:elasticbeanstalk-eu-west-1-591700784641.s3.eu-west-1.amazonaws.com)",
      "Bash(cp:*)",
      "Bash(npm run build:*)",
      "WebFetch(domain:production-debug.eba-qnkd628d.eu-west-1.elasticbeanstalk.com)",
      "Bash(timeout 300 npm install --omit=dev)",
      "Bash(aws logs describe-log-groups:*)",
      "Bash(aws lambda invoke:*)",
      "Bash(cat:*)",
      "Bash(aws apigateway get-resources:*)",
      "Bash(aws lambda add-permission:*)",
      "Bash(aws logs describe-log-streams:*)",
      "Bash(aws logs get-log-events:*)",
      "Bash(aws apigateway get-integration:*)",
      "Bash(npx jest:*)"
    ],
    "deny": []
  }
}